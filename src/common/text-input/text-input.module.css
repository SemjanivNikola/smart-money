.inputWrapper {
    position: relative;
    display: flex;
    align-items: center;
    gap: var(--s);
    border-bottom: 2px solid var(--black);
    background: transparent;
}

input.textInput {
    width: 100%;
    outline: none;
    border: none;
    font-size: var(--font-m);
    appearance: none;
    background: inherit;
    color: var(--dark);
    padding: var(--s) var(--xs);
}

.focusIndicator {
    display: block;
    position: absolute;
    bottom: -2px;
    left: 0;
    height: 2px;
    width: 0;
    background-color: var(--action);
    transition: width 150ms ease-in-out;
}

.inputLabel {
    position: absolute;
    top: 50%;
    left: 36px;
    transition: all 150ms ease-out;
}

input.textInput:focus+.inputLabel,
input.textInput:not([value=""])+.inputLabel {
    top: -0.25rem;
    left: 0;
    font-size: var(--font-xs);
}

input.textInput:focus+.inputLabel,
input.textInput:focus~ svg {
    color: var(--action);
}

input.textInput:focus~.focusIndicator {
    width: 100%;
}

.inputError {
    padding-top: var(--s);
    font-size: var(--font-xs);
    font-weight: 500;
    color: var(--danger);
}

.inputWrapper[data-error="true"] input.textInput {
    color: var(--danger);
}

.inputWrapper[data-error="true"] .inputLabel,
.inputWrapper[data-error="true"] input.textInput:focus+.inputLabel {
    color: var(--danger);
}

.inputWrapper[data-error="true"] .focusIndicator {
    background-color: var(--danger);
}

.inputWrapper[data-error="true"] svg {
    fill: var(--danger);
}

.togglePassTypeBtn {
    border: none;
    outline: none!important;
    background: transparent;
}